server {

	#These two lines are specifying that the server
	#should listen on port 443 for HTTPS traffic.
	#The ssl option indicates that the server should use SSL/TLS
	#encryption for incoming connections. 
	#The second line is using IPv6 syntax to specify 
	#the same configuration for IPv6 connections.
	listen	    443 ssl;
	listen 	[::]:443 ssl;

	#This line specifies the server name that this block will match.
	#In this case, it's matching requests for pcamaren.42.fr.

	server_name pcamaren.42.fr;
	
	#These four lines configure SSL/TLS encryption for incoming connections.
	#The ssl on line enables SSL/TLS encryption for this server block.
	#The ssl_protocols line specifies which versions of SSL/TLS should be used,
	#in this case, only TLS versions 1.2 and 1.3. 
	#The ssl_certificate and ssl_certificate_key lines specify the file paths to the SSL certificate and key, respectively.
	ssl on;
	ssl_protocols		TLSv1.2 TLSv1.3;
	ssl_certificate		/etc/nginx/ssl/pcamaren.crt;
	ssl_certificate_key	/etc/nginx/ssl/pcamaren.key;

	#These two lines configure the root directory and default index files for the server.
	#The root line specifies the directory where the server 
	#should look for files when handling incoming requests. 
	#In this case, it's set to /var/www/wordpress. 
	#The index line specifies the default index files to look for if no specific file is requested.
	#In this case, it's set to index.php, index.html, and index.htm.
	root /var/www/wordpress;
	index index.php index.html index.htm;

	#This block configures how the server should handle requests to the root directory (/).
	#The try_files directive tells Nginx to attempt to serve the requested file,
	#then the requested directory, and finally return a 404 error if neither exists.
	location / {
		try_files $uri $uri/ =404;
	}

	#Configuring how the server should handle requests to PHP files.
	#using a regular expression to match any file with a .php extension.
	#The include line specifies that the fastcgi_params file should be included with this configuration.
	#The fastcgi_intercept_errors line tells Nginx to intercept any FastCGI errors and return an appropriate HTTP error code.
	#The fastcgi_pass line specifies the IP address and port number of the backend server that will handle the PHP requests.
	#Finally, the fastcgi_param line sets the SCRIPT_FILENAME parameter to the full path of the requested PHP file.
	location ~ \.php$ {
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_pass wordpress:9000;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
 	}
}
